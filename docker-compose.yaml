
networks:
  bot:
    external: false
  backend:
    external: false

services:
  db:
    image: postgres
    networks:
      - backend
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - 5432:5432
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10


  backend:
    container_name: backend
    build:
      context: ./Backend
      dockerfile: Dockerfile
    restart: unless-stopped
    networks:
      - bot
      - backend
    expose:
      - "8000"
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./Backend/.env
    # command: alembic upgrade head && uvicorn backend.backend_api:app --host 0.0.0.0 --port 8000

  bot:
    container_name: bot
    build:
      context: ./Bot
      dockerfile: Dockerfile
    restart: unless-stopped
    networks:
      - bot
      - backend
    depends_on:
      - backend
      - db
    env_file:
       - ./Bot/.env
    command: python bot/main.py

volumes:
  postgres_data: